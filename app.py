import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from dotenv import load_dotenv
import asyncio
import threading
import http.server
import socketserver

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")
ADMIN_ID = os.getenv("ADMIN_ID")

if not BOT_TOKEN or not CHANNEL_ID or not ADMIN_ID:
    raise ValueError("[–û–®–ò–ë–ö–ê] –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: BOT_TOKEN, CHANNEL_ID, ADMIN_ID")

ADMIN_ID = int(ADMIN_ID)

# –ó–∞–ø—É—Å–∫ —Ñ–µ–π–∫–æ–≤–æ–≥–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Render
def run_server():
    PORT = 10000  # –ª—é–±–æ–π —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç
    Handler = http.server.SimpleHTTPRequestHandler
    with socketserver.TCPServer(("", PORT), Handler) as httpd:
        print(f"Fake web server running on port {PORT}")
        httpd.serve_forever()

threading.Thread(target=run_server, daemon=True).start()

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
stats = {"users": set()}

@dp.message(CommandStart())
async def start_handler(message: types.Message):
    stats["users"].add(message.from_user.id)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª.\n"
        "–ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É!"
    )

@dp.message(F.text == "/stats")
async def stats_handler(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        await message.answer("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        return
    await message.answer(f"üìä –ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(stats['users'])}")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
